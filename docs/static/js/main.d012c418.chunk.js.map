{"version":3,"sources":["Component/AddCategory.js","helpers/getGifts.js","Component/GifGridItem.js","Component/GifGrid.js","hooks/useFetchGifts.js","Component/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","undefined","length","trim","cat","type","value","onChange","target","onFocus","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAIVC,mBAFJ,wBAFc,mBAIvCC,EAJuC,KAI3BC,EAJ2B,KAwB9C,OACI,0BAAMC,SAfW,SAACC,GAClBA,EAAEC,sBACiBC,IAAfL,GAA4BA,EAAWM,OAAS,GAAKN,EAAWO,OAAOD,OAAS,IAChFR,GAAc,SAAAU,GAAG,OAAKR,GAAL,mBAAmBQ,OACpCP,EAAc,OAYd,2BACIQ,KAAK,OACLC,MAAOV,EACPW,SAvBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAuBfG,QAZU,SAACV,GAhBS,yBAiBxBA,EAAES,OAAOF,OACTT,EAAc,S,uBCtBba,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EACfhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OAVAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAGlB,CAACpB,IAEGqB,EDbuBK,CAAc1B,GAAhCa,EAFyB,EAE9BN,KAAYa,EAFkB,EAElBA,QAEnB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,EAAU,uBAAGJ,UAAU,oCAAb,YAA+D,uBAAGA,UAAU,oCAAb,WAC1E,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACJD,UEWlBkB,EAvBM,WAAO,IAAD,EAEa5C,mBAAS,IAFtB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAIvB,OACA,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEI8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCZ9B8B,IAASC,OACN,kBAAC,EAAD,MACDC,SAASC,eAAe,U","file":"static/js/main.d012c418.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const estadoInicialInputValue = 'Escribe algo aquÃ­';\r\n    \r\n    const [inputValue, setInputValue] = useState(estadoInicialInputValue)\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue !== undefined && inputValue.length > 0 && inputValue.trim().length > 0) {\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    const handleOnFofus = (e) => {\r\n        if (e.target.value === estadoInicialInputValue ) {\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                onFocus={handleOnFofus}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ivo3caYoDs7pclsyDIsrYszXxCc2z0vk`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        }\r\n    });\r\n    return gifts;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title,url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const {data:images,loading} = useFetchGifts(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading ? <p className=\"animate__animated animate__flash\">cargando</p> : <p className=\"animate__animated animate__flash\">Cargado</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            { ...img } \r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifts\"\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            setState({\r\n                data:imgs,\r\n                loading: false,\r\n            });\r\n        })\r\n    }, [category] )\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\n\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    return (\r\n    <>\r\n        <h2>GitExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        <ol>\r\n            {\r\n            categories.map( category => (\r\n                <GifGrid \r\n                    key={category}\r\n                    category={category} \r\n                />\r\n            )\r\n        )}\r\n        </ol>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default GitExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GitExpertApp from './Component/GitExpertApp';\r\n\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n   <GitExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}